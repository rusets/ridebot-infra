name: Deploy infra (Terraform)

on:
  push:
    branches: [ main ]         # run on push to main
  workflow_dispatch: {}        # allow manual run

permissions:
  id-token: write              # required for OIDC auth to AWS
  contents: read

env:
  AWS_REGION: us-east-1
  TF_WORKDIR: terraform        # path to your .tf files

concurrency:
  group: infra-${{ github.ref }}
  cancel-in-progress: false

jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKDIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::097635932419:role/ridebot-terraform-gha
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init
        run: terraform init -upgrade -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -input=false -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKDIR }}/tfplan

  apply:
    needs: [ plan ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKDIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::097635932419:role/ridebot-terraform-gha
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init
        run: terraform init -upgrade -input=false

      # optional: re-generate plan to avoid artifact step
      - name: Terraform apply (auto-approve)
        run: terraform apply -input=false -auto-approve